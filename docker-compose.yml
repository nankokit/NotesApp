services:
  notesapp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=NotesDb;Username=postgres;Password=postgres
      - Jwt__Key=GFGzauPOxFVKgTEcIdsmneiWRPAGjRmIXlZaINkGicFMQFjneA
      - Jwt__Issuer=NotesApp
      - Jwt__Audience=NotesApp
      - Jwt__TokenExpiryMinutes=60
      - Minio__Endpoint=minio:9000
      - Minio__AccessKey=minioadmin
      - Minio__SecretKey=minioadmin
      - Minio__UseSSL=false
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
    networks:
      - notesapp-network

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: NotesDb
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - notesapp-network

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - notesapp-network

volumes:
  postgres_data:
  minio_data:

networks:
  notesapp-network:
    driver: bridge